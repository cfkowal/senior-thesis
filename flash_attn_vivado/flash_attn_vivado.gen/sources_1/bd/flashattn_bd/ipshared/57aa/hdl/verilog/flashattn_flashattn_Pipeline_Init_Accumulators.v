// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module flashattn_flashattn_Pipeline_Init_Accumulators (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        output_accum_63_address0,
        output_accum_63_ce0,
        output_accum_63_we0,
        output_accum_63_d0,
        output_accum_62_address0,
        output_accum_62_ce0,
        output_accum_62_we0,
        output_accum_62_d0,
        output_accum_61_address0,
        output_accum_61_ce0,
        output_accum_61_we0,
        output_accum_61_d0,
        output_accum_60_address0,
        output_accum_60_ce0,
        output_accum_60_we0,
        output_accum_60_d0,
        output_accum_59_address0,
        output_accum_59_ce0,
        output_accum_59_we0,
        output_accum_59_d0,
        output_accum_58_address0,
        output_accum_58_ce0,
        output_accum_58_we0,
        output_accum_58_d0,
        output_accum_57_address0,
        output_accum_57_ce0,
        output_accum_57_we0,
        output_accum_57_d0,
        output_accum_56_address0,
        output_accum_56_ce0,
        output_accum_56_we0,
        output_accum_56_d0,
        output_accum_55_address0,
        output_accum_55_ce0,
        output_accum_55_we0,
        output_accum_55_d0,
        output_accum_54_address0,
        output_accum_54_ce0,
        output_accum_54_we0,
        output_accum_54_d0,
        output_accum_53_address0,
        output_accum_53_ce0,
        output_accum_53_we0,
        output_accum_53_d0,
        output_accum_52_address0,
        output_accum_52_ce0,
        output_accum_52_we0,
        output_accum_52_d0,
        output_accum_51_address0,
        output_accum_51_ce0,
        output_accum_51_we0,
        output_accum_51_d0,
        output_accum_50_address0,
        output_accum_50_ce0,
        output_accum_50_we0,
        output_accum_50_d0,
        output_accum_49_address0,
        output_accum_49_ce0,
        output_accum_49_we0,
        output_accum_49_d0,
        output_accum_48_address0,
        output_accum_48_ce0,
        output_accum_48_we0,
        output_accum_48_d0,
        output_accum_47_address0,
        output_accum_47_ce0,
        output_accum_47_we0,
        output_accum_47_d0,
        output_accum_46_address0,
        output_accum_46_ce0,
        output_accum_46_we0,
        output_accum_46_d0,
        output_accum_45_address0,
        output_accum_45_ce0,
        output_accum_45_we0,
        output_accum_45_d0,
        output_accum_44_address0,
        output_accum_44_ce0,
        output_accum_44_we0,
        output_accum_44_d0,
        output_accum_43_address0,
        output_accum_43_ce0,
        output_accum_43_we0,
        output_accum_43_d0,
        output_accum_42_address0,
        output_accum_42_ce0,
        output_accum_42_we0,
        output_accum_42_d0,
        output_accum_41_address0,
        output_accum_41_ce0,
        output_accum_41_we0,
        output_accum_41_d0,
        output_accum_40_address0,
        output_accum_40_ce0,
        output_accum_40_we0,
        output_accum_40_d0,
        output_accum_39_address0,
        output_accum_39_ce0,
        output_accum_39_we0,
        output_accum_39_d0,
        output_accum_38_address0,
        output_accum_38_ce0,
        output_accum_38_we0,
        output_accum_38_d0,
        output_accum_37_address0,
        output_accum_37_ce0,
        output_accum_37_we0,
        output_accum_37_d0,
        output_accum_36_address0,
        output_accum_36_ce0,
        output_accum_36_we0,
        output_accum_36_d0,
        output_accum_35_address0,
        output_accum_35_ce0,
        output_accum_35_we0,
        output_accum_35_d0,
        output_accum_34_address0,
        output_accum_34_ce0,
        output_accum_34_we0,
        output_accum_34_d0,
        output_accum_33_address0,
        output_accum_33_ce0,
        output_accum_33_we0,
        output_accum_33_d0,
        output_accum_32_address0,
        output_accum_32_ce0,
        output_accum_32_we0,
        output_accum_32_d0,
        output_accum_31_address0,
        output_accum_31_ce0,
        output_accum_31_we0,
        output_accum_31_d0,
        output_accum_30_address0,
        output_accum_30_ce0,
        output_accum_30_we0,
        output_accum_30_d0,
        output_accum_29_address0,
        output_accum_29_ce0,
        output_accum_29_we0,
        output_accum_29_d0,
        output_accum_28_address0,
        output_accum_28_ce0,
        output_accum_28_we0,
        output_accum_28_d0,
        output_accum_27_address0,
        output_accum_27_ce0,
        output_accum_27_we0,
        output_accum_27_d0,
        output_accum_26_address0,
        output_accum_26_ce0,
        output_accum_26_we0,
        output_accum_26_d0,
        output_accum_25_address0,
        output_accum_25_ce0,
        output_accum_25_we0,
        output_accum_25_d0,
        output_accum_24_address0,
        output_accum_24_ce0,
        output_accum_24_we0,
        output_accum_24_d0,
        output_accum_23_address0,
        output_accum_23_ce0,
        output_accum_23_we0,
        output_accum_23_d0,
        output_accum_22_address0,
        output_accum_22_ce0,
        output_accum_22_we0,
        output_accum_22_d0,
        output_accum_21_address0,
        output_accum_21_ce0,
        output_accum_21_we0,
        output_accum_21_d0,
        output_accum_20_address0,
        output_accum_20_ce0,
        output_accum_20_we0,
        output_accum_20_d0,
        output_accum_19_address0,
        output_accum_19_ce0,
        output_accum_19_we0,
        output_accum_19_d0,
        output_accum_18_address0,
        output_accum_18_ce0,
        output_accum_18_we0,
        output_accum_18_d0,
        output_accum_17_address0,
        output_accum_17_ce0,
        output_accum_17_we0,
        output_accum_17_d0,
        output_accum_16_address0,
        output_accum_16_ce0,
        output_accum_16_we0,
        output_accum_16_d0,
        output_accum_15_address0,
        output_accum_15_ce0,
        output_accum_15_we0,
        output_accum_15_d0,
        output_accum_14_address0,
        output_accum_14_ce0,
        output_accum_14_we0,
        output_accum_14_d0,
        output_accum_13_address0,
        output_accum_13_ce0,
        output_accum_13_we0,
        output_accum_13_d0,
        output_accum_12_address0,
        output_accum_12_ce0,
        output_accum_12_we0,
        output_accum_12_d0,
        output_accum_11_address0,
        output_accum_11_ce0,
        output_accum_11_we0,
        output_accum_11_d0,
        output_accum_10_address0,
        output_accum_10_ce0,
        output_accum_10_we0,
        output_accum_10_d0,
        output_accum_9_address0,
        output_accum_9_ce0,
        output_accum_9_we0,
        output_accum_9_d0,
        output_accum_8_address0,
        output_accum_8_ce0,
        output_accum_8_we0,
        output_accum_8_d0,
        output_accum_7_address0,
        output_accum_7_ce0,
        output_accum_7_we0,
        output_accum_7_d0,
        output_accum_6_address0,
        output_accum_6_ce0,
        output_accum_6_we0,
        output_accum_6_d0,
        output_accum_5_address0,
        output_accum_5_ce0,
        output_accum_5_we0,
        output_accum_5_d0,
        output_accum_4_address0,
        output_accum_4_ce0,
        output_accum_4_we0,
        output_accum_4_d0,
        output_accum_3_address0,
        output_accum_3_ce0,
        output_accum_3_we0,
        output_accum_3_d0,
        output_accum_2_address0,
        output_accum_2_ce0,
        output_accum_2_we0,
        output_accum_2_d0,
        output_accum_1_address0,
        output_accum_1_ce0,
        output_accum_1_we0,
        output_accum_1_d0,
        output_accum_address0,
        output_accum_ce0,
        output_accum_we0,
        output_accum_d0,
        row_max_address0,
        row_max_ce0,
        row_max_we0,
        row_max_d0,
        exp_sum_address0,
        exp_sum_ce0,
        exp_sum_we0,
        exp_sum_d0
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] output_accum_63_address0;
output   output_accum_63_ce0;
output   output_accum_63_we0;
output  [31:0] output_accum_63_d0;
output  [4:0] output_accum_62_address0;
output   output_accum_62_ce0;
output   output_accum_62_we0;
output  [31:0] output_accum_62_d0;
output  [4:0] output_accum_61_address0;
output   output_accum_61_ce0;
output   output_accum_61_we0;
output  [31:0] output_accum_61_d0;
output  [4:0] output_accum_60_address0;
output   output_accum_60_ce0;
output   output_accum_60_we0;
output  [31:0] output_accum_60_d0;
output  [4:0] output_accum_59_address0;
output   output_accum_59_ce0;
output   output_accum_59_we0;
output  [31:0] output_accum_59_d0;
output  [4:0] output_accum_58_address0;
output   output_accum_58_ce0;
output   output_accum_58_we0;
output  [31:0] output_accum_58_d0;
output  [4:0] output_accum_57_address0;
output   output_accum_57_ce0;
output   output_accum_57_we0;
output  [31:0] output_accum_57_d0;
output  [4:0] output_accum_56_address0;
output   output_accum_56_ce0;
output   output_accum_56_we0;
output  [31:0] output_accum_56_d0;
output  [4:0] output_accum_55_address0;
output   output_accum_55_ce0;
output   output_accum_55_we0;
output  [31:0] output_accum_55_d0;
output  [4:0] output_accum_54_address0;
output   output_accum_54_ce0;
output   output_accum_54_we0;
output  [31:0] output_accum_54_d0;
output  [4:0] output_accum_53_address0;
output   output_accum_53_ce0;
output   output_accum_53_we0;
output  [31:0] output_accum_53_d0;
output  [4:0] output_accum_52_address0;
output   output_accum_52_ce0;
output   output_accum_52_we0;
output  [31:0] output_accum_52_d0;
output  [4:0] output_accum_51_address0;
output   output_accum_51_ce0;
output   output_accum_51_we0;
output  [31:0] output_accum_51_d0;
output  [4:0] output_accum_50_address0;
output   output_accum_50_ce0;
output   output_accum_50_we0;
output  [31:0] output_accum_50_d0;
output  [4:0] output_accum_49_address0;
output   output_accum_49_ce0;
output   output_accum_49_we0;
output  [31:0] output_accum_49_d0;
output  [4:0] output_accum_48_address0;
output   output_accum_48_ce0;
output   output_accum_48_we0;
output  [31:0] output_accum_48_d0;
output  [4:0] output_accum_47_address0;
output   output_accum_47_ce0;
output   output_accum_47_we0;
output  [31:0] output_accum_47_d0;
output  [4:0] output_accum_46_address0;
output   output_accum_46_ce0;
output   output_accum_46_we0;
output  [31:0] output_accum_46_d0;
output  [4:0] output_accum_45_address0;
output   output_accum_45_ce0;
output   output_accum_45_we0;
output  [31:0] output_accum_45_d0;
output  [4:0] output_accum_44_address0;
output   output_accum_44_ce0;
output   output_accum_44_we0;
output  [31:0] output_accum_44_d0;
output  [4:0] output_accum_43_address0;
output   output_accum_43_ce0;
output   output_accum_43_we0;
output  [31:0] output_accum_43_d0;
output  [4:0] output_accum_42_address0;
output   output_accum_42_ce0;
output   output_accum_42_we0;
output  [31:0] output_accum_42_d0;
output  [4:0] output_accum_41_address0;
output   output_accum_41_ce0;
output   output_accum_41_we0;
output  [31:0] output_accum_41_d0;
output  [4:0] output_accum_40_address0;
output   output_accum_40_ce0;
output   output_accum_40_we0;
output  [31:0] output_accum_40_d0;
output  [4:0] output_accum_39_address0;
output   output_accum_39_ce0;
output   output_accum_39_we0;
output  [31:0] output_accum_39_d0;
output  [4:0] output_accum_38_address0;
output   output_accum_38_ce0;
output   output_accum_38_we0;
output  [31:0] output_accum_38_d0;
output  [4:0] output_accum_37_address0;
output   output_accum_37_ce0;
output   output_accum_37_we0;
output  [31:0] output_accum_37_d0;
output  [4:0] output_accum_36_address0;
output   output_accum_36_ce0;
output   output_accum_36_we0;
output  [31:0] output_accum_36_d0;
output  [4:0] output_accum_35_address0;
output   output_accum_35_ce0;
output   output_accum_35_we0;
output  [31:0] output_accum_35_d0;
output  [4:0] output_accum_34_address0;
output   output_accum_34_ce0;
output   output_accum_34_we0;
output  [31:0] output_accum_34_d0;
output  [4:0] output_accum_33_address0;
output   output_accum_33_ce0;
output   output_accum_33_we0;
output  [31:0] output_accum_33_d0;
output  [4:0] output_accum_32_address0;
output   output_accum_32_ce0;
output   output_accum_32_we0;
output  [31:0] output_accum_32_d0;
output  [4:0] output_accum_31_address0;
output   output_accum_31_ce0;
output   output_accum_31_we0;
output  [31:0] output_accum_31_d0;
output  [4:0] output_accum_30_address0;
output   output_accum_30_ce0;
output   output_accum_30_we0;
output  [31:0] output_accum_30_d0;
output  [4:0] output_accum_29_address0;
output   output_accum_29_ce0;
output   output_accum_29_we0;
output  [31:0] output_accum_29_d0;
output  [4:0] output_accum_28_address0;
output   output_accum_28_ce0;
output   output_accum_28_we0;
output  [31:0] output_accum_28_d0;
output  [4:0] output_accum_27_address0;
output   output_accum_27_ce0;
output   output_accum_27_we0;
output  [31:0] output_accum_27_d0;
output  [4:0] output_accum_26_address0;
output   output_accum_26_ce0;
output   output_accum_26_we0;
output  [31:0] output_accum_26_d0;
output  [4:0] output_accum_25_address0;
output   output_accum_25_ce0;
output   output_accum_25_we0;
output  [31:0] output_accum_25_d0;
output  [4:0] output_accum_24_address0;
output   output_accum_24_ce0;
output   output_accum_24_we0;
output  [31:0] output_accum_24_d0;
output  [4:0] output_accum_23_address0;
output   output_accum_23_ce0;
output   output_accum_23_we0;
output  [31:0] output_accum_23_d0;
output  [4:0] output_accum_22_address0;
output   output_accum_22_ce0;
output   output_accum_22_we0;
output  [31:0] output_accum_22_d0;
output  [4:0] output_accum_21_address0;
output   output_accum_21_ce0;
output   output_accum_21_we0;
output  [31:0] output_accum_21_d0;
output  [4:0] output_accum_20_address0;
output   output_accum_20_ce0;
output   output_accum_20_we0;
output  [31:0] output_accum_20_d0;
output  [4:0] output_accum_19_address0;
output   output_accum_19_ce0;
output   output_accum_19_we0;
output  [31:0] output_accum_19_d0;
output  [4:0] output_accum_18_address0;
output   output_accum_18_ce0;
output   output_accum_18_we0;
output  [31:0] output_accum_18_d0;
output  [4:0] output_accum_17_address0;
output   output_accum_17_ce0;
output   output_accum_17_we0;
output  [31:0] output_accum_17_d0;
output  [4:0] output_accum_16_address0;
output   output_accum_16_ce0;
output   output_accum_16_we0;
output  [31:0] output_accum_16_d0;
output  [4:0] output_accum_15_address0;
output   output_accum_15_ce0;
output   output_accum_15_we0;
output  [31:0] output_accum_15_d0;
output  [4:0] output_accum_14_address0;
output   output_accum_14_ce0;
output   output_accum_14_we0;
output  [31:0] output_accum_14_d0;
output  [4:0] output_accum_13_address0;
output   output_accum_13_ce0;
output   output_accum_13_we0;
output  [31:0] output_accum_13_d0;
output  [4:0] output_accum_12_address0;
output   output_accum_12_ce0;
output   output_accum_12_we0;
output  [31:0] output_accum_12_d0;
output  [4:0] output_accum_11_address0;
output   output_accum_11_ce0;
output   output_accum_11_we0;
output  [31:0] output_accum_11_d0;
output  [4:0] output_accum_10_address0;
output   output_accum_10_ce0;
output   output_accum_10_we0;
output  [31:0] output_accum_10_d0;
output  [4:0] output_accum_9_address0;
output   output_accum_9_ce0;
output   output_accum_9_we0;
output  [31:0] output_accum_9_d0;
output  [4:0] output_accum_8_address0;
output   output_accum_8_ce0;
output   output_accum_8_we0;
output  [31:0] output_accum_8_d0;
output  [4:0] output_accum_7_address0;
output   output_accum_7_ce0;
output   output_accum_7_we0;
output  [31:0] output_accum_7_d0;
output  [4:0] output_accum_6_address0;
output   output_accum_6_ce0;
output   output_accum_6_we0;
output  [31:0] output_accum_6_d0;
output  [4:0] output_accum_5_address0;
output   output_accum_5_ce0;
output   output_accum_5_we0;
output  [31:0] output_accum_5_d0;
output  [4:0] output_accum_4_address0;
output   output_accum_4_ce0;
output   output_accum_4_we0;
output  [31:0] output_accum_4_d0;
output  [4:0] output_accum_3_address0;
output   output_accum_3_ce0;
output   output_accum_3_we0;
output  [31:0] output_accum_3_d0;
output  [4:0] output_accum_2_address0;
output   output_accum_2_ce0;
output   output_accum_2_we0;
output  [31:0] output_accum_2_d0;
output  [4:0] output_accum_1_address0;
output   output_accum_1_ce0;
output   output_accum_1_we0;
output  [31:0] output_accum_1_d0;
output  [4:0] output_accum_address0;
output   output_accum_ce0;
output   output_accum_we0;
output  [31:0] output_accum_d0;
output  [4:0] row_max_address0;
output   row_max_ce0;
output   row_max_we0;
output  [31:0] row_max_d0;
output  [4:0] exp_sum_address0;
output   exp_sum_ce0;
output   exp_sum_we0;
output  [31:0] exp_sum_d0;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln58_fu_1098_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [63:0] zext_ln58_fu_1110_p1;
reg   [5:0] q_fu_162;
wire   [5:0] add_ln58_fu_1104_p2;
wire    ap_loop_init;
reg   [5:0] ap_sig_allocacmp_q_1;
reg    row_max_we0_local;
reg    row_max_ce0_local;
reg    exp_sum_we0_local;
reg    exp_sum_ce0_local;
reg    output_accum_we0_local;
reg    output_accum_ce0_local;
reg    output_accum_1_we0_local;
reg    output_accum_1_ce0_local;
reg    output_accum_2_we0_local;
reg    output_accum_2_ce0_local;
reg    output_accum_3_we0_local;
reg    output_accum_3_ce0_local;
reg    output_accum_4_we0_local;
reg    output_accum_4_ce0_local;
reg    output_accum_5_we0_local;
reg    output_accum_5_ce0_local;
reg    output_accum_6_we0_local;
reg    output_accum_6_ce0_local;
reg    output_accum_7_we0_local;
reg    output_accum_7_ce0_local;
reg    output_accum_8_we0_local;
reg    output_accum_8_ce0_local;
reg    output_accum_9_we0_local;
reg    output_accum_9_ce0_local;
reg    output_accum_10_we0_local;
reg    output_accum_10_ce0_local;
reg    output_accum_11_we0_local;
reg    output_accum_11_ce0_local;
reg    output_accum_12_we0_local;
reg    output_accum_12_ce0_local;
reg    output_accum_13_we0_local;
reg    output_accum_13_ce0_local;
reg    output_accum_14_we0_local;
reg    output_accum_14_ce0_local;
reg    output_accum_15_we0_local;
reg    output_accum_15_ce0_local;
reg    output_accum_16_we0_local;
reg    output_accum_16_ce0_local;
reg    output_accum_17_we0_local;
reg    output_accum_17_ce0_local;
reg    output_accum_18_we0_local;
reg    output_accum_18_ce0_local;
reg    output_accum_19_we0_local;
reg    output_accum_19_ce0_local;
reg    output_accum_20_we0_local;
reg    output_accum_20_ce0_local;
reg    output_accum_21_we0_local;
reg    output_accum_21_ce0_local;
reg    output_accum_22_we0_local;
reg    output_accum_22_ce0_local;
reg    output_accum_23_we0_local;
reg    output_accum_23_ce0_local;
reg    output_accum_24_we0_local;
reg    output_accum_24_ce0_local;
reg    output_accum_25_we0_local;
reg    output_accum_25_ce0_local;
reg    output_accum_26_we0_local;
reg    output_accum_26_ce0_local;
reg    output_accum_27_we0_local;
reg    output_accum_27_ce0_local;
reg    output_accum_28_we0_local;
reg    output_accum_28_ce0_local;
reg    output_accum_29_we0_local;
reg    output_accum_29_ce0_local;
reg    output_accum_30_we0_local;
reg    output_accum_30_ce0_local;
reg    output_accum_31_we0_local;
reg    output_accum_31_ce0_local;
reg    output_accum_32_we0_local;
reg    output_accum_32_ce0_local;
reg    output_accum_33_we0_local;
reg    output_accum_33_ce0_local;
reg    output_accum_34_we0_local;
reg    output_accum_34_ce0_local;
reg    output_accum_35_we0_local;
reg    output_accum_35_ce0_local;
reg    output_accum_36_we0_local;
reg    output_accum_36_ce0_local;
reg    output_accum_37_we0_local;
reg    output_accum_37_ce0_local;
reg    output_accum_38_we0_local;
reg    output_accum_38_ce0_local;
reg    output_accum_39_we0_local;
reg    output_accum_39_ce0_local;
reg    output_accum_40_we0_local;
reg    output_accum_40_ce0_local;
reg    output_accum_41_we0_local;
reg    output_accum_41_ce0_local;
reg    output_accum_42_we0_local;
reg    output_accum_42_ce0_local;
reg    output_accum_43_we0_local;
reg    output_accum_43_ce0_local;
reg    output_accum_44_we0_local;
reg    output_accum_44_ce0_local;
reg    output_accum_45_we0_local;
reg    output_accum_45_ce0_local;
reg    output_accum_46_we0_local;
reg    output_accum_46_ce0_local;
reg    output_accum_47_we0_local;
reg    output_accum_47_ce0_local;
reg    output_accum_48_we0_local;
reg    output_accum_48_ce0_local;
reg    output_accum_49_we0_local;
reg    output_accum_49_ce0_local;
reg    output_accum_50_we0_local;
reg    output_accum_50_ce0_local;
reg    output_accum_51_we0_local;
reg    output_accum_51_ce0_local;
reg    output_accum_52_we0_local;
reg    output_accum_52_ce0_local;
reg    output_accum_53_we0_local;
reg    output_accum_53_ce0_local;
reg    output_accum_54_we0_local;
reg    output_accum_54_ce0_local;
reg    output_accum_55_we0_local;
reg    output_accum_55_ce0_local;
reg    output_accum_56_we0_local;
reg    output_accum_56_ce0_local;
reg    output_accum_57_we0_local;
reg    output_accum_57_ce0_local;
reg    output_accum_58_we0_local;
reg    output_accum_58_ce0_local;
reg    output_accum_59_we0_local;
reg    output_accum_59_ce0_local;
reg    output_accum_60_we0_local;
reg    output_accum_60_ce0_local;
reg    output_accum_61_we0_local;
reg    output_accum_61_ce0_local;
reg    output_accum_62_we0_local;
reg    output_accum_62_ce0_local;
reg    output_accum_63_we0_local;
reg    output_accum_63_ce0_local;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 q_fu_162 = 6'd0;
#0 ap_done_reg = 1'b0;
end

flashattn_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((icmp_ln58_fu_1098_p2 == 1'd0)) begin
            q_fu_162 <= add_ln58_fu_1104_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            q_fu_162 <= 6'd0;
        end
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1_pp0_stage0_iter0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_q_1 = 6'd0;
    end else begin
        ap_sig_allocacmp_q_1 = q_fu_162;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        exp_sum_ce0_local = 1'b1;
    end else begin
        exp_sum_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        exp_sum_we0_local = 1'b1;
    end else begin
        exp_sum_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_10_ce0_local = 1'b1;
    end else begin
        output_accum_10_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_10_we0_local = 1'b1;
    end else begin
        output_accum_10_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_11_ce0_local = 1'b1;
    end else begin
        output_accum_11_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_11_we0_local = 1'b1;
    end else begin
        output_accum_11_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_12_ce0_local = 1'b1;
    end else begin
        output_accum_12_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_12_we0_local = 1'b1;
    end else begin
        output_accum_12_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_13_ce0_local = 1'b1;
    end else begin
        output_accum_13_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_13_we0_local = 1'b1;
    end else begin
        output_accum_13_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_14_ce0_local = 1'b1;
    end else begin
        output_accum_14_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_14_we0_local = 1'b1;
    end else begin
        output_accum_14_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_15_ce0_local = 1'b1;
    end else begin
        output_accum_15_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_15_we0_local = 1'b1;
    end else begin
        output_accum_15_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_16_ce0_local = 1'b1;
    end else begin
        output_accum_16_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_16_we0_local = 1'b1;
    end else begin
        output_accum_16_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_17_ce0_local = 1'b1;
    end else begin
        output_accum_17_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_17_we0_local = 1'b1;
    end else begin
        output_accum_17_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_18_ce0_local = 1'b1;
    end else begin
        output_accum_18_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_18_we0_local = 1'b1;
    end else begin
        output_accum_18_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_19_ce0_local = 1'b1;
    end else begin
        output_accum_19_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_19_we0_local = 1'b1;
    end else begin
        output_accum_19_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_1_ce0_local = 1'b1;
    end else begin
        output_accum_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_1_we0_local = 1'b1;
    end else begin
        output_accum_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_20_ce0_local = 1'b1;
    end else begin
        output_accum_20_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_20_we0_local = 1'b1;
    end else begin
        output_accum_20_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_21_ce0_local = 1'b1;
    end else begin
        output_accum_21_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_21_we0_local = 1'b1;
    end else begin
        output_accum_21_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_22_ce0_local = 1'b1;
    end else begin
        output_accum_22_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_22_we0_local = 1'b1;
    end else begin
        output_accum_22_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_23_ce0_local = 1'b1;
    end else begin
        output_accum_23_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_23_we0_local = 1'b1;
    end else begin
        output_accum_23_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_24_ce0_local = 1'b1;
    end else begin
        output_accum_24_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_24_we0_local = 1'b1;
    end else begin
        output_accum_24_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_25_ce0_local = 1'b1;
    end else begin
        output_accum_25_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_25_we0_local = 1'b1;
    end else begin
        output_accum_25_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_26_ce0_local = 1'b1;
    end else begin
        output_accum_26_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_26_we0_local = 1'b1;
    end else begin
        output_accum_26_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_27_ce0_local = 1'b1;
    end else begin
        output_accum_27_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_27_we0_local = 1'b1;
    end else begin
        output_accum_27_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_28_ce0_local = 1'b1;
    end else begin
        output_accum_28_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_28_we0_local = 1'b1;
    end else begin
        output_accum_28_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_29_ce0_local = 1'b1;
    end else begin
        output_accum_29_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_29_we0_local = 1'b1;
    end else begin
        output_accum_29_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_2_ce0_local = 1'b1;
    end else begin
        output_accum_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_2_we0_local = 1'b1;
    end else begin
        output_accum_2_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_30_ce0_local = 1'b1;
    end else begin
        output_accum_30_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_30_we0_local = 1'b1;
    end else begin
        output_accum_30_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_31_ce0_local = 1'b1;
    end else begin
        output_accum_31_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_31_we0_local = 1'b1;
    end else begin
        output_accum_31_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_32_ce0_local = 1'b1;
    end else begin
        output_accum_32_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_32_we0_local = 1'b1;
    end else begin
        output_accum_32_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_33_ce0_local = 1'b1;
    end else begin
        output_accum_33_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_33_we0_local = 1'b1;
    end else begin
        output_accum_33_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_34_ce0_local = 1'b1;
    end else begin
        output_accum_34_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_34_we0_local = 1'b1;
    end else begin
        output_accum_34_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_35_ce0_local = 1'b1;
    end else begin
        output_accum_35_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_35_we0_local = 1'b1;
    end else begin
        output_accum_35_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_36_ce0_local = 1'b1;
    end else begin
        output_accum_36_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_36_we0_local = 1'b1;
    end else begin
        output_accum_36_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_37_ce0_local = 1'b1;
    end else begin
        output_accum_37_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_37_we0_local = 1'b1;
    end else begin
        output_accum_37_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_38_ce0_local = 1'b1;
    end else begin
        output_accum_38_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_38_we0_local = 1'b1;
    end else begin
        output_accum_38_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_39_ce0_local = 1'b1;
    end else begin
        output_accum_39_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_39_we0_local = 1'b1;
    end else begin
        output_accum_39_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_3_ce0_local = 1'b1;
    end else begin
        output_accum_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_3_we0_local = 1'b1;
    end else begin
        output_accum_3_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_40_ce0_local = 1'b1;
    end else begin
        output_accum_40_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_40_we0_local = 1'b1;
    end else begin
        output_accum_40_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_41_ce0_local = 1'b1;
    end else begin
        output_accum_41_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_41_we0_local = 1'b1;
    end else begin
        output_accum_41_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_42_ce0_local = 1'b1;
    end else begin
        output_accum_42_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_42_we0_local = 1'b1;
    end else begin
        output_accum_42_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_43_ce0_local = 1'b1;
    end else begin
        output_accum_43_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_43_we0_local = 1'b1;
    end else begin
        output_accum_43_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_44_ce0_local = 1'b1;
    end else begin
        output_accum_44_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_44_we0_local = 1'b1;
    end else begin
        output_accum_44_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_45_ce0_local = 1'b1;
    end else begin
        output_accum_45_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_45_we0_local = 1'b1;
    end else begin
        output_accum_45_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_46_ce0_local = 1'b1;
    end else begin
        output_accum_46_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_46_we0_local = 1'b1;
    end else begin
        output_accum_46_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_47_ce0_local = 1'b1;
    end else begin
        output_accum_47_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_47_we0_local = 1'b1;
    end else begin
        output_accum_47_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_48_ce0_local = 1'b1;
    end else begin
        output_accum_48_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_48_we0_local = 1'b1;
    end else begin
        output_accum_48_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_49_ce0_local = 1'b1;
    end else begin
        output_accum_49_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_49_we0_local = 1'b1;
    end else begin
        output_accum_49_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_4_ce0_local = 1'b1;
    end else begin
        output_accum_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_4_we0_local = 1'b1;
    end else begin
        output_accum_4_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_50_ce0_local = 1'b1;
    end else begin
        output_accum_50_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_50_we0_local = 1'b1;
    end else begin
        output_accum_50_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_51_ce0_local = 1'b1;
    end else begin
        output_accum_51_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_51_we0_local = 1'b1;
    end else begin
        output_accum_51_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_52_ce0_local = 1'b1;
    end else begin
        output_accum_52_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_52_we0_local = 1'b1;
    end else begin
        output_accum_52_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_53_ce0_local = 1'b1;
    end else begin
        output_accum_53_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_53_we0_local = 1'b1;
    end else begin
        output_accum_53_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_54_ce0_local = 1'b1;
    end else begin
        output_accum_54_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_54_we0_local = 1'b1;
    end else begin
        output_accum_54_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_55_ce0_local = 1'b1;
    end else begin
        output_accum_55_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_55_we0_local = 1'b1;
    end else begin
        output_accum_55_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_56_ce0_local = 1'b1;
    end else begin
        output_accum_56_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_56_we0_local = 1'b1;
    end else begin
        output_accum_56_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_57_ce0_local = 1'b1;
    end else begin
        output_accum_57_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_57_we0_local = 1'b1;
    end else begin
        output_accum_57_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_58_ce0_local = 1'b1;
    end else begin
        output_accum_58_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_58_we0_local = 1'b1;
    end else begin
        output_accum_58_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_59_ce0_local = 1'b1;
    end else begin
        output_accum_59_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_59_we0_local = 1'b1;
    end else begin
        output_accum_59_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_5_ce0_local = 1'b1;
    end else begin
        output_accum_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_5_we0_local = 1'b1;
    end else begin
        output_accum_5_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_60_ce0_local = 1'b1;
    end else begin
        output_accum_60_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_60_we0_local = 1'b1;
    end else begin
        output_accum_60_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_61_ce0_local = 1'b1;
    end else begin
        output_accum_61_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_61_we0_local = 1'b1;
    end else begin
        output_accum_61_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_62_ce0_local = 1'b1;
    end else begin
        output_accum_62_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_62_we0_local = 1'b1;
    end else begin
        output_accum_62_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_63_ce0_local = 1'b1;
    end else begin
        output_accum_63_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_63_we0_local = 1'b1;
    end else begin
        output_accum_63_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_6_ce0_local = 1'b1;
    end else begin
        output_accum_6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_6_we0_local = 1'b1;
    end else begin
        output_accum_6_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_7_ce0_local = 1'b1;
    end else begin
        output_accum_7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_7_we0_local = 1'b1;
    end else begin
        output_accum_7_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_8_ce0_local = 1'b1;
    end else begin
        output_accum_8_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_8_we0_local = 1'b1;
    end else begin
        output_accum_8_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_9_ce0_local = 1'b1;
    end else begin
        output_accum_9_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_9_we0_local = 1'b1;
    end else begin
        output_accum_9_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_ce0_local = 1'b1;
    end else begin
        output_accum_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        output_accum_we0_local = 1'b1;
    end else begin
        output_accum_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        row_max_ce0_local = 1'b1;
    end else begin
        row_max_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln58_fu_1098_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        row_max_we0_local = 1'b1;
    end else begin
        row_max_we0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln58_fu_1104_p2 = (ap_sig_allocacmp_q_1 + 6'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_done = ap_done_sig;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign exp_sum_address0 = zext_ln58_fu_1110_p1;

assign exp_sum_ce0 = exp_sum_ce0_local;

assign exp_sum_d0 = 32'd0;

assign exp_sum_we0 = exp_sum_we0_local;

assign icmp_ln58_fu_1098_p2 = ((ap_sig_allocacmp_q_1 == 6'd32) ? 1'b1 : 1'b0);

assign output_accum_10_address0 = zext_ln58_fu_1110_p1;

assign output_accum_10_ce0 = output_accum_10_ce0_local;

assign output_accum_10_d0 = 32'd0;

assign output_accum_10_we0 = output_accum_10_we0_local;

assign output_accum_11_address0 = zext_ln58_fu_1110_p1;

assign output_accum_11_ce0 = output_accum_11_ce0_local;

assign output_accum_11_d0 = 32'd0;

assign output_accum_11_we0 = output_accum_11_we0_local;

assign output_accum_12_address0 = zext_ln58_fu_1110_p1;

assign output_accum_12_ce0 = output_accum_12_ce0_local;

assign output_accum_12_d0 = 32'd0;

assign output_accum_12_we0 = output_accum_12_we0_local;

assign output_accum_13_address0 = zext_ln58_fu_1110_p1;

assign output_accum_13_ce0 = output_accum_13_ce0_local;

assign output_accum_13_d0 = 32'd0;

assign output_accum_13_we0 = output_accum_13_we0_local;

assign output_accum_14_address0 = zext_ln58_fu_1110_p1;

assign output_accum_14_ce0 = output_accum_14_ce0_local;

assign output_accum_14_d0 = 32'd0;

assign output_accum_14_we0 = output_accum_14_we0_local;

assign output_accum_15_address0 = zext_ln58_fu_1110_p1;

assign output_accum_15_ce0 = output_accum_15_ce0_local;

assign output_accum_15_d0 = 32'd0;

assign output_accum_15_we0 = output_accum_15_we0_local;

assign output_accum_16_address0 = zext_ln58_fu_1110_p1;

assign output_accum_16_ce0 = output_accum_16_ce0_local;

assign output_accum_16_d0 = 32'd0;

assign output_accum_16_we0 = output_accum_16_we0_local;

assign output_accum_17_address0 = zext_ln58_fu_1110_p1;

assign output_accum_17_ce0 = output_accum_17_ce0_local;

assign output_accum_17_d0 = 32'd0;

assign output_accum_17_we0 = output_accum_17_we0_local;

assign output_accum_18_address0 = zext_ln58_fu_1110_p1;

assign output_accum_18_ce0 = output_accum_18_ce0_local;

assign output_accum_18_d0 = 32'd0;

assign output_accum_18_we0 = output_accum_18_we0_local;

assign output_accum_19_address0 = zext_ln58_fu_1110_p1;

assign output_accum_19_ce0 = output_accum_19_ce0_local;

assign output_accum_19_d0 = 32'd0;

assign output_accum_19_we0 = output_accum_19_we0_local;

assign output_accum_1_address0 = zext_ln58_fu_1110_p1;

assign output_accum_1_ce0 = output_accum_1_ce0_local;

assign output_accum_1_d0 = 32'd0;

assign output_accum_1_we0 = output_accum_1_we0_local;

assign output_accum_20_address0 = zext_ln58_fu_1110_p1;

assign output_accum_20_ce0 = output_accum_20_ce0_local;

assign output_accum_20_d0 = 32'd0;

assign output_accum_20_we0 = output_accum_20_we0_local;

assign output_accum_21_address0 = zext_ln58_fu_1110_p1;

assign output_accum_21_ce0 = output_accum_21_ce0_local;

assign output_accum_21_d0 = 32'd0;

assign output_accum_21_we0 = output_accum_21_we0_local;

assign output_accum_22_address0 = zext_ln58_fu_1110_p1;

assign output_accum_22_ce0 = output_accum_22_ce0_local;

assign output_accum_22_d0 = 32'd0;

assign output_accum_22_we0 = output_accum_22_we0_local;

assign output_accum_23_address0 = zext_ln58_fu_1110_p1;

assign output_accum_23_ce0 = output_accum_23_ce0_local;

assign output_accum_23_d0 = 32'd0;

assign output_accum_23_we0 = output_accum_23_we0_local;

assign output_accum_24_address0 = zext_ln58_fu_1110_p1;

assign output_accum_24_ce0 = output_accum_24_ce0_local;

assign output_accum_24_d0 = 32'd0;

assign output_accum_24_we0 = output_accum_24_we0_local;

assign output_accum_25_address0 = zext_ln58_fu_1110_p1;

assign output_accum_25_ce0 = output_accum_25_ce0_local;

assign output_accum_25_d0 = 32'd0;

assign output_accum_25_we0 = output_accum_25_we0_local;

assign output_accum_26_address0 = zext_ln58_fu_1110_p1;

assign output_accum_26_ce0 = output_accum_26_ce0_local;

assign output_accum_26_d0 = 32'd0;

assign output_accum_26_we0 = output_accum_26_we0_local;

assign output_accum_27_address0 = zext_ln58_fu_1110_p1;

assign output_accum_27_ce0 = output_accum_27_ce0_local;

assign output_accum_27_d0 = 32'd0;

assign output_accum_27_we0 = output_accum_27_we0_local;

assign output_accum_28_address0 = zext_ln58_fu_1110_p1;

assign output_accum_28_ce0 = output_accum_28_ce0_local;

assign output_accum_28_d0 = 32'd0;

assign output_accum_28_we0 = output_accum_28_we0_local;

assign output_accum_29_address0 = zext_ln58_fu_1110_p1;

assign output_accum_29_ce0 = output_accum_29_ce0_local;

assign output_accum_29_d0 = 32'd0;

assign output_accum_29_we0 = output_accum_29_we0_local;

assign output_accum_2_address0 = zext_ln58_fu_1110_p1;

assign output_accum_2_ce0 = output_accum_2_ce0_local;

assign output_accum_2_d0 = 32'd0;

assign output_accum_2_we0 = output_accum_2_we0_local;

assign output_accum_30_address0 = zext_ln58_fu_1110_p1;

assign output_accum_30_ce0 = output_accum_30_ce0_local;

assign output_accum_30_d0 = 32'd0;

assign output_accum_30_we0 = output_accum_30_we0_local;

assign output_accum_31_address0 = zext_ln58_fu_1110_p1;

assign output_accum_31_ce0 = output_accum_31_ce0_local;

assign output_accum_31_d0 = 32'd0;

assign output_accum_31_we0 = output_accum_31_we0_local;

assign output_accum_32_address0 = zext_ln58_fu_1110_p1;

assign output_accum_32_ce0 = output_accum_32_ce0_local;

assign output_accum_32_d0 = 32'd0;

assign output_accum_32_we0 = output_accum_32_we0_local;

assign output_accum_33_address0 = zext_ln58_fu_1110_p1;

assign output_accum_33_ce0 = output_accum_33_ce0_local;

assign output_accum_33_d0 = 32'd0;

assign output_accum_33_we0 = output_accum_33_we0_local;

assign output_accum_34_address0 = zext_ln58_fu_1110_p1;

assign output_accum_34_ce0 = output_accum_34_ce0_local;

assign output_accum_34_d0 = 32'd0;

assign output_accum_34_we0 = output_accum_34_we0_local;

assign output_accum_35_address0 = zext_ln58_fu_1110_p1;

assign output_accum_35_ce0 = output_accum_35_ce0_local;

assign output_accum_35_d0 = 32'd0;

assign output_accum_35_we0 = output_accum_35_we0_local;

assign output_accum_36_address0 = zext_ln58_fu_1110_p1;

assign output_accum_36_ce0 = output_accum_36_ce0_local;

assign output_accum_36_d0 = 32'd0;

assign output_accum_36_we0 = output_accum_36_we0_local;

assign output_accum_37_address0 = zext_ln58_fu_1110_p1;

assign output_accum_37_ce0 = output_accum_37_ce0_local;

assign output_accum_37_d0 = 32'd0;

assign output_accum_37_we0 = output_accum_37_we0_local;

assign output_accum_38_address0 = zext_ln58_fu_1110_p1;

assign output_accum_38_ce0 = output_accum_38_ce0_local;

assign output_accum_38_d0 = 32'd0;

assign output_accum_38_we0 = output_accum_38_we0_local;

assign output_accum_39_address0 = zext_ln58_fu_1110_p1;

assign output_accum_39_ce0 = output_accum_39_ce0_local;

assign output_accum_39_d0 = 32'd0;

assign output_accum_39_we0 = output_accum_39_we0_local;

assign output_accum_3_address0 = zext_ln58_fu_1110_p1;

assign output_accum_3_ce0 = output_accum_3_ce0_local;

assign output_accum_3_d0 = 32'd0;

assign output_accum_3_we0 = output_accum_3_we0_local;

assign output_accum_40_address0 = zext_ln58_fu_1110_p1;

assign output_accum_40_ce0 = output_accum_40_ce0_local;

assign output_accum_40_d0 = 32'd0;

assign output_accum_40_we0 = output_accum_40_we0_local;

assign output_accum_41_address0 = zext_ln58_fu_1110_p1;

assign output_accum_41_ce0 = output_accum_41_ce0_local;

assign output_accum_41_d0 = 32'd0;

assign output_accum_41_we0 = output_accum_41_we0_local;

assign output_accum_42_address0 = zext_ln58_fu_1110_p1;

assign output_accum_42_ce0 = output_accum_42_ce0_local;

assign output_accum_42_d0 = 32'd0;

assign output_accum_42_we0 = output_accum_42_we0_local;

assign output_accum_43_address0 = zext_ln58_fu_1110_p1;

assign output_accum_43_ce0 = output_accum_43_ce0_local;

assign output_accum_43_d0 = 32'd0;

assign output_accum_43_we0 = output_accum_43_we0_local;

assign output_accum_44_address0 = zext_ln58_fu_1110_p1;

assign output_accum_44_ce0 = output_accum_44_ce0_local;

assign output_accum_44_d0 = 32'd0;

assign output_accum_44_we0 = output_accum_44_we0_local;

assign output_accum_45_address0 = zext_ln58_fu_1110_p1;

assign output_accum_45_ce0 = output_accum_45_ce0_local;

assign output_accum_45_d0 = 32'd0;

assign output_accum_45_we0 = output_accum_45_we0_local;

assign output_accum_46_address0 = zext_ln58_fu_1110_p1;

assign output_accum_46_ce0 = output_accum_46_ce0_local;

assign output_accum_46_d0 = 32'd0;

assign output_accum_46_we0 = output_accum_46_we0_local;

assign output_accum_47_address0 = zext_ln58_fu_1110_p1;

assign output_accum_47_ce0 = output_accum_47_ce0_local;

assign output_accum_47_d0 = 32'd0;

assign output_accum_47_we0 = output_accum_47_we0_local;

assign output_accum_48_address0 = zext_ln58_fu_1110_p1;

assign output_accum_48_ce0 = output_accum_48_ce0_local;

assign output_accum_48_d0 = 32'd0;

assign output_accum_48_we0 = output_accum_48_we0_local;

assign output_accum_49_address0 = zext_ln58_fu_1110_p1;

assign output_accum_49_ce0 = output_accum_49_ce0_local;

assign output_accum_49_d0 = 32'd0;

assign output_accum_49_we0 = output_accum_49_we0_local;

assign output_accum_4_address0 = zext_ln58_fu_1110_p1;

assign output_accum_4_ce0 = output_accum_4_ce0_local;

assign output_accum_4_d0 = 32'd0;

assign output_accum_4_we0 = output_accum_4_we0_local;

assign output_accum_50_address0 = zext_ln58_fu_1110_p1;

assign output_accum_50_ce0 = output_accum_50_ce0_local;

assign output_accum_50_d0 = 32'd0;

assign output_accum_50_we0 = output_accum_50_we0_local;

assign output_accum_51_address0 = zext_ln58_fu_1110_p1;

assign output_accum_51_ce0 = output_accum_51_ce0_local;

assign output_accum_51_d0 = 32'd0;

assign output_accum_51_we0 = output_accum_51_we0_local;

assign output_accum_52_address0 = zext_ln58_fu_1110_p1;

assign output_accum_52_ce0 = output_accum_52_ce0_local;

assign output_accum_52_d0 = 32'd0;

assign output_accum_52_we0 = output_accum_52_we0_local;

assign output_accum_53_address0 = zext_ln58_fu_1110_p1;

assign output_accum_53_ce0 = output_accum_53_ce0_local;

assign output_accum_53_d0 = 32'd0;

assign output_accum_53_we0 = output_accum_53_we0_local;

assign output_accum_54_address0 = zext_ln58_fu_1110_p1;

assign output_accum_54_ce0 = output_accum_54_ce0_local;

assign output_accum_54_d0 = 32'd0;

assign output_accum_54_we0 = output_accum_54_we0_local;

assign output_accum_55_address0 = zext_ln58_fu_1110_p1;

assign output_accum_55_ce0 = output_accum_55_ce0_local;

assign output_accum_55_d0 = 32'd0;

assign output_accum_55_we0 = output_accum_55_we0_local;

assign output_accum_56_address0 = zext_ln58_fu_1110_p1;

assign output_accum_56_ce0 = output_accum_56_ce0_local;

assign output_accum_56_d0 = 32'd0;

assign output_accum_56_we0 = output_accum_56_we0_local;

assign output_accum_57_address0 = zext_ln58_fu_1110_p1;

assign output_accum_57_ce0 = output_accum_57_ce0_local;

assign output_accum_57_d0 = 32'd0;

assign output_accum_57_we0 = output_accum_57_we0_local;

assign output_accum_58_address0 = zext_ln58_fu_1110_p1;

assign output_accum_58_ce0 = output_accum_58_ce0_local;

assign output_accum_58_d0 = 32'd0;

assign output_accum_58_we0 = output_accum_58_we0_local;

assign output_accum_59_address0 = zext_ln58_fu_1110_p1;

assign output_accum_59_ce0 = output_accum_59_ce0_local;

assign output_accum_59_d0 = 32'd0;

assign output_accum_59_we0 = output_accum_59_we0_local;

assign output_accum_5_address0 = zext_ln58_fu_1110_p1;

assign output_accum_5_ce0 = output_accum_5_ce0_local;

assign output_accum_5_d0 = 32'd0;

assign output_accum_5_we0 = output_accum_5_we0_local;

assign output_accum_60_address0 = zext_ln58_fu_1110_p1;

assign output_accum_60_ce0 = output_accum_60_ce0_local;

assign output_accum_60_d0 = 32'd0;

assign output_accum_60_we0 = output_accum_60_we0_local;

assign output_accum_61_address0 = zext_ln58_fu_1110_p1;

assign output_accum_61_ce0 = output_accum_61_ce0_local;

assign output_accum_61_d0 = 32'd0;

assign output_accum_61_we0 = output_accum_61_we0_local;

assign output_accum_62_address0 = zext_ln58_fu_1110_p1;

assign output_accum_62_ce0 = output_accum_62_ce0_local;

assign output_accum_62_d0 = 32'd0;

assign output_accum_62_we0 = output_accum_62_we0_local;

assign output_accum_63_address0 = zext_ln58_fu_1110_p1;

assign output_accum_63_ce0 = output_accum_63_ce0_local;

assign output_accum_63_d0 = 32'd0;

assign output_accum_63_we0 = output_accum_63_we0_local;

assign output_accum_6_address0 = zext_ln58_fu_1110_p1;

assign output_accum_6_ce0 = output_accum_6_ce0_local;

assign output_accum_6_d0 = 32'd0;

assign output_accum_6_we0 = output_accum_6_we0_local;

assign output_accum_7_address0 = zext_ln58_fu_1110_p1;

assign output_accum_7_ce0 = output_accum_7_ce0_local;

assign output_accum_7_d0 = 32'd0;

assign output_accum_7_we0 = output_accum_7_we0_local;

assign output_accum_8_address0 = zext_ln58_fu_1110_p1;

assign output_accum_8_ce0 = output_accum_8_ce0_local;

assign output_accum_8_d0 = 32'd0;

assign output_accum_8_we0 = output_accum_8_we0_local;

assign output_accum_9_address0 = zext_ln58_fu_1110_p1;

assign output_accum_9_ce0 = output_accum_9_ce0_local;

assign output_accum_9_d0 = 32'd0;

assign output_accum_9_we0 = output_accum_9_we0_local;

assign output_accum_address0 = zext_ln58_fu_1110_p1;

assign output_accum_ce0 = output_accum_ce0_local;

assign output_accum_d0 = 32'd0;

assign output_accum_we0 = output_accum_we0_local;

assign row_max_address0 = zext_ln58_fu_1110_p1;

assign row_max_ce0 = row_max_ce0_local;

assign row_max_d0 = 32'd4286578688;

assign row_max_we0 = row_max_we0_local;

assign zext_ln58_fu_1110_p1 = ap_sig_allocacmp_q_1;

endmodule //flashattn_flashattn_Pipeline_Init_Accumulators
