// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module flashattn_flashattn_Pipeline_Read_K_and_V_VITIS_LOOP_35_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        K_tile_in_TVALID,
        V_tile_in_TVALID,
        K_tile_address0,
        K_tile_ce0,
        K_tile_we0,
        K_tile_d0,
        V_tile_address0,
        V_tile_ce0,
        V_tile_we0,
        V_tile_d0,
        K_tile_in_TDATA,
        K_tile_in_TREADY,
        K_tile_in_TKEEP,
        K_tile_in_TSTRB,
        K_tile_in_TLAST,
        V_tile_in_TDATA,
        V_tile_in_TREADY,
        V_tile_in_TKEEP,
        V_tile_in_TSTRB,
        V_tile_in_TLAST
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   K_tile_in_TVALID;
input   V_tile_in_TVALID;
output  [11:0] K_tile_address0;
output   K_tile_ce0;
output   K_tile_we0;
output  [31:0] K_tile_d0;
output  [11:0] V_tile_address0;
output   V_tile_ce0;
output   V_tile_we0;
output  [31:0] V_tile_d0;
input  [31:0] K_tile_in_TDATA;
output   K_tile_in_TREADY;
input  [3:0] K_tile_in_TKEEP;
input  [3:0] K_tile_in_TSTRB;
input  [0:0] K_tile_in_TLAST;
input  [31:0] V_tile_in_TDATA;
output   V_tile_in_TREADY;
input  [3:0] V_tile_in_TKEEP;
input  [3:0] V_tile_in_TSTRB;
input  [0:0] V_tile_in_TLAST;

reg ap_idle;
reg K_tile_in_TREADY;
reg V_tile_in_TREADY;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
reg    ap_block_state3_pp0_stage0_iter2_grp1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln33_fu_150_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    K_tile_in_TDATA_blk_n;
wire    ap_block_pp0_stage0_grp1;
reg    V_tile_in_TDATA_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [11:0] add_ln40_fu_217_p2;
reg   [11:0] add_ln40_reg_287;
reg    ap_block_pp0_stage0_11001_grp1;
wire   [63:0] zext_ln40_1_fu_239_p1;
reg   [6:0] col_fu_70;
wire   [6:0] add_ln35_fu_223_p2;
wire    ap_loop_init;
reg   [6:0] row_fu_74;
wire   [6:0] select_ln33_1_fu_193_p3;
reg   [12:0] indvar_flatten6_fu_78;
wire   [12:0] add_ln33_1_fu_156_p2;
reg   [12:0] ap_sig_allocacmp_indvar_flatten6_load;
wire    ap_block_pp0_stage0;
reg    K_tile_we0_local;
wire   [31:0] K_in_data_fu_248_p1;
reg    K_tile_ce0_local;
reg    V_tile_we0_local;
wire   [31:0] V_in_data_fu_257_p1;
reg    V_tile_ce0_local;
wire   [0:0] icmp_ln35_fu_179_p2;
wire   [6:0] add_ln33_fu_173_p2;
wire   [5:0] trunc_ln40_fu_201_p1;
wire   [6:0] select_ln33_fu_185_p3;
wire   [11:0] tmp_1_fu_205_p3;
wire   [11:0] zext_ln40_fu_213_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 col_fu_70 = 7'd0;
#0 row_fu_74 = 7'd0;
#0 indvar_flatten6_fu_78 = 13'd0;
#0 ap_done_reg = 1'b0;
end

flashattn_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            col_fu_70 <= 7'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            col_fu_70 <= add_ln35_fu_223_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln33_fu_150_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten6_fu_78 <= add_ln33_1_fu_156_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten6_fu_78 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            row_fu_74 <= 7'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            row_fu_74 <= select_ln33_1_fu_193_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln40_reg_287 <= add_ln40_fu_217_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        K_tile_ce0_local = 1'b1;
    end else begin
        K_tile_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        K_tile_in_TDATA_blk_n = K_tile_in_TVALID;
    end else begin
        K_tile_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        K_tile_in_TREADY = 1'b1;
    end else begin
        K_tile_in_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        K_tile_we0_local = 1'b1;
    end else begin
        K_tile_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        V_tile_ce0_local = 1'b1;
    end else begin
        V_tile_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        V_tile_in_TDATA_blk_n = V_tile_in_TVALID;
    end else begin
        V_tile_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        V_tile_in_TREADY = 1'b1;
    end else begin
        V_tile_in_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        V_tile_we0_local = 1'b1;
    end else begin
        V_tile_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_fu_150_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten6_load = 13'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten6_load = indvar_flatten6_fu_78;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign K_in_data_fu_248_p1 = K_tile_in_TDATA;

assign K_tile_address0 = zext_ln40_1_fu_239_p1;

assign K_tile_ce0 = K_tile_ce0_local;

assign K_tile_d0 = K_in_data_fu_248_p1;

assign K_tile_we0 = K_tile_we0_local;

assign V_in_data_fu_257_p1 = V_tile_in_TDATA;

assign V_tile_address0 = zext_ln40_1_fu_239_p1;

assign V_tile_ce0 = V_tile_ce0_local;

assign V_tile_d0 = V_in_data_fu_257_p1;

assign V_tile_we0 = V_tile_we0_local;

assign add_ln33_1_fu_156_p2 = (ap_sig_allocacmp_indvar_flatten6_load + 13'd1);

assign add_ln33_fu_173_p2 = (row_fu_74 + 7'd1);

assign add_ln35_fu_223_p2 = (select_ln33_fu_185_p3 + 7'd1);

assign add_ln40_fu_217_p2 = (tmp_1_fu_205_p3 + zext_ln40_fu_213_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2_grp1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp1 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2_grp1));
end

assign ap_block_pp0_stage0_grp1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2_grp1));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2_grp1 = ((1'b0 == V_tile_in_TVALID) | (1'b0 == K_tile_in_TVALID));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign icmp_ln33_fu_150_p2 = ((ap_sig_allocacmp_indvar_flatten6_load == 13'd4096) ? 1'b1 : 1'b0);

assign icmp_ln35_fu_179_p2 = ((col_fu_70 == 7'd64) ? 1'b1 : 1'b0);

assign select_ln33_1_fu_193_p3 = ((icmp_ln35_fu_179_p2[0:0] == 1'b1) ? add_ln33_fu_173_p2 : row_fu_74);

assign select_ln33_fu_185_p3 = ((icmp_ln35_fu_179_p2[0:0] == 1'b1) ? 7'd0 : col_fu_70);

assign tmp_1_fu_205_p3 = {{trunc_ln40_fu_201_p1}, {6'd0}};

assign trunc_ln40_fu_201_p1 = select_ln33_1_fu_193_p3[5:0];

assign zext_ln40_1_fu_239_p1 = add_ln40_reg_287;

assign zext_ln40_fu_213_p1 = select_ln33_fu_185_p3;

endmodule //flashattn_flashattn_Pipeline_Read_K_and_V_VITIS_LOOP_35_2
