

================================================================
== Vitis HLS Report for 'matrix_cyclic_block_Pipeline_Matrix_Loop_VITIS_LOOP_39_2'
================================================================
* Date:           Mon Apr  7 11:33:10 2025

* Version:        2024.2 (Build 5238294 on Nov  8 2024)
* Project:        flash_attn
* Solution:       hls (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.923 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |  Latency (cycles) |  Latency (absolute) |  Interval |                    Pipeline                    |
    |   min   |   max   |    min   |    max   | min | max |                      Type                      |
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |       22|       22|  0.220 us|  0.220 us|   17|   17|  loop auto-rewind stp (delay=0 clock cycles(s))|
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                               |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |           Loop Name           |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Matrix_Loop_VITIS_LOOP_39_2  |       20|       20|         6|          1|          1|    16|       yes|
        +-------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 6


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 1
  Pipeline-0 : II = 1, D = 6, States = { 1 2 3 4 5 6 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.95>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%j = alloca i32 1" [loop_pipeline.cpp:39]   --->   Operation 9 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%i = alloca i32 1" [loop_pipeline.cpp:38]   --->   Operation 10 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%indvar_flatten14 = alloca i32 1"   --->   Operation 11 'alloca' 'indvar_flatten14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%A_3_load1 = alloca i32 1"   --->   Operation 12 'alloca' 'A_3_load1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%A_2_load3 = alloca i32 1"   --->   Operation 13 'alloca' 'A_2_load3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%A_1_load5 = alloca i32 1"   --->   Operation 14 'alloca' 'A_1_load5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%A_load7 = alloca i32 1"   --->   Operation 15 'alloca' 'A_load7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specaxissidechannel_ln0 = specaxissidechannel void @_ssdm_op_SpecAXISSideChannel, i32 %stream_out_V_data_V, i4 %stream_out_V_keep_V, i4 %stream_out_V_strb_V, i1 0, i1 %stream_out_V_last_V, i1 0, i1 0, void @empty_1"   --->   Operation 16 'specaxissidechannel' 'specaxissidechannel_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %stream_out_V_last_V, i4 %stream_out_V_strb_V, i4 %stream_out_V_keep_V, i32 %stream_out_V_data_V, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 17 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (1.58ns)   --->   "%store_ln0 = store i5 0, i5 %indvar_flatten14"   --->   Operation 18 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 19 [1/1] (1.58ns)   --->   "%store_ln38 = store i3 0, i3 %i" [loop_pipeline.cpp:38]   --->   Operation 19 'store' 'store_ln38' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 20 [1/1] (1.58ns)   --->   "%store_ln39 = store i3 0, i3 %j" [loop_pipeline.cpp:39]   --->   Operation 20 'store' 'store_ln39' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 21 [1/1] (1.58ns)   --->   "%br_ln38 = br void %VITIS_LOOP_41_3" [loop_pipeline.cpp:38]   --->   Operation 21 'br' 'br_ln38' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%indvar_flatten14_load = load i5 %indvar_flatten14" [loop_pipeline.cpp:38]   --->   Operation 22 'load' 'indvar_flatten14_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (1.78ns)   --->   "%icmp_ln38 = icmp_eq  i5 %indvar_flatten14_load, i5 16" [loop_pipeline.cpp:38]   --->   Operation 23 'icmp' 'icmp_ln38' <Predicate = true> <Delay = 1.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (1.78ns)   --->   "%add_ln38 = add i5 %indvar_flatten14_load, i5 1" [loop_pipeline.cpp:38]   --->   Operation 24 'add' 'add_ln38' <Predicate = true> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%br_ln38 = br i1 %icmp_ln38, void %for.inc55, void %for.end57.exitStub" [loop_pipeline.cpp:38]   --->   Operation 25 'br' 'br_ln38' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (1.58ns)   --->   "%store_ln38 = store i5 %add_ln38, i5 %indvar_flatten14" [loop_pipeline.cpp:38]   --->   Operation 26 'store' 'store_ln38' <Predicate = (!icmp_ln38)> <Delay = 1.58>

State 2 <SV = 1> <Delay = 5.86>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%valueout_last_1 = phi i1 %valueout_last, void %VITIS_LOOP_41_3.split, i1 0, void %newFuncRoot"   --->   Operation 27 'phi' 'valueout_last_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%j_load = load i3 %j" [loop_pipeline.cpp:39]   --->   Operation 28 'load' 'j_load' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%i_load = load i3 %i" [loop_pipeline.cpp:38]   --->   Operation 29 'load' 'i_load' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @Matrix_Loop_VITIS_LOOP_39_2_str"   --->   Operation 30 'specloopname' 'specloopname_ln0' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 16, i64 16, i64 16"   --->   Operation 31 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (1.65ns)   --->   "%icmp_ln39 = icmp_eq  i3 %j_load, i3 4" [loop_pipeline.cpp:39]   --->   Operation 32 'icmp' 'icmp_ln39' <Predicate = (!icmp_ln38)> <Delay = 1.65> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.98ns)   --->   "%select_ln15 = select i1 %icmp_ln39, i3 0, i3 %j_load" [loop_pipeline.cpp:15]   --->   Operation 33 'select' 'select_ln15' <Predicate = (!icmp_ln38)> <Delay = 0.98> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (1.65ns)   --->   "%add_ln38_1 = add i3 %i_load, i3 1" [loop_pipeline.cpp:38]   --->   Operation 34 'add' 'add_ln38_1' <Predicate = (!icmp_ln38)> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.98ns)   --->   "%select_ln38 = select i1 %icmp_ln39, i3 %add_ln38_1, i3 %i_load" [loop_pipeline.cpp:38]   --->   Operation 35 'select' 'select_ln38' <Predicate = (!icmp_ln38)> <Delay = 0.98> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (1.65ns)   --->   "%first_iter_1 = icmp_eq  i3 %select_ln15, i3 0" [loop_pipeline.cpp:15]   --->   Operation 36 'icmp' 'first_iter_1' <Predicate = (!icmp_ln38)> <Delay = 1.65> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%zext_ln38 = zext i3 %select_ln38" [loop_pipeline.cpp:38]   --->   Operation 37 'zext' 'zext_ln38' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%A_addr = getelementptr i32 %A, i64 0, i64 %zext_ln38" [loop_pipeline.cpp:42]   --->   Operation 38 'getelementptr' 'A_addr' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%A_1_addr = getelementptr i32 %A_1, i64 0, i64 %zext_ln38" [loop_pipeline.cpp:38]   --->   Operation 39 'getelementptr' 'A_1_addr' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%A_2_addr = getelementptr i32 %A_2, i64 0, i64 %zext_ln38" [loop_pipeline.cpp:38]   --->   Operation 40 'getelementptr' 'A_2_addr' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%A_3_addr = getelementptr i32 %A_3, i64 0, i64 %zext_ln38" [loop_pipeline.cpp:38]   --->   Operation 41 'getelementptr' 'A_3_addr' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %first_iter_1, void %VITIS_LOOP_41_3.split, void %for.first.iter.VITIS_LOOP_41_3" [loop_pipeline.cpp:39]   --->   Operation 42 'br' 'br_ln39' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_2 : Operation 43 [2/2] (2.32ns)   --->   "%A_load = load i2 %A_addr" [loop_pipeline.cpp:42]   --->   Operation 43 'load' 'A_load' <Predicate = (!icmp_ln38 & first_iter_1)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_2 : Operation 44 [2/2] (2.32ns)   --->   "%A_1_load = load i2 %A_1_addr" [loop_pipeline.cpp:38]   --->   Operation 44 'load' 'A_1_load' <Predicate = (!icmp_ln38 & first_iter_1)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_2 : Operation 45 [2/2] (2.32ns)   --->   "%A_2_load = load i2 %A_2_addr" [loop_pipeline.cpp:38]   --->   Operation 45 'load' 'A_2_load' <Predicate = (!icmp_ln38 & first_iter_1)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_2 : Operation 46 [2/2] (2.32ns)   --->   "%A_3_load = load i2 %A_3_addr" [loop_pipeline.cpp:38]   --->   Operation 46 'load' 'A_3_load' <Predicate = (!icmp_ln38 & first_iter_1)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_2 : Operation 47 [1/1] (1.65ns)   --->   "%cmp48 = icmp_eq  i3 %select_ln38, i3 3" [loop_pipeline.cpp:38]   --->   Operation 47 'icmp' 'cmp48' <Predicate = (!icmp_ln38)> <Delay = 1.65> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%zext_ln39 = zext i3 %select_ln15" [loop_pipeline.cpp:39]   --->   Operation 48 'zext' 'zext_ln39' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%B_addr = getelementptr i32 %B, i64 0, i64 %zext_ln39" [loop_pipeline.cpp:42]   --->   Operation 49 'getelementptr' 'B_addr' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_2 : Operation 50 [2/2] (2.32ns)   --->   "%B_load = load i2 %B_addr" [loop_pipeline.cpp:42]   --->   Operation 50 'load' 'B_load' <Predicate = (!icmp_ln38)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%B_1_addr = getelementptr i32 %B_1, i64 0, i64 %zext_ln39" [loop_pipeline.cpp:42]   --->   Operation 51 'getelementptr' 'B_1_addr' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_2 : Operation 52 [2/2] (2.32ns)   --->   "%B_1_load = load i2 %B_1_addr" [loop_pipeline.cpp:42]   --->   Operation 52 'load' 'B_1_load' <Predicate = (!icmp_ln38)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%B_2_addr = getelementptr i32 %B_2, i64 0, i64 %zext_ln39" [loop_pipeline.cpp:42]   --->   Operation 53 'getelementptr' 'B_2_addr' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_2 : Operation 54 [2/2] (2.32ns)   --->   "%B_2_load = load i2 %B_2_addr" [loop_pipeline.cpp:42]   --->   Operation 54 'load' 'B_2_load' <Predicate = (!icmp_ln38)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%B_3_addr = getelementptr i32 %B_3, i64 0, i64 %zext_ln39" [loop_pipeline.cpp:42]   --->   Operation 55 'getelementptr' 'B_3_addr' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_2 : Operation 56 [2/2] (2.32ns)   --->   "%B_3_load = load i2 %B_3_addr" [loop_pipeline.cpp:42]   --->   Operation 56 'load' 'B_3_load' <Predicate = (!icmp_ln38)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%tmp = partselect i2 @_ssdm_op_PartSelect.i2.i3.i32.i32, i3 %select_ln15, i32 1, i32 2" [loop_pipeline.cpp:46]   --->   Operation 57 'partselect' 'tmp' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (1.56ns)   --->   "%icmp_ln46 = icmp_ne  i2 %tmp, i2 0" [loop_pipeline.cpp:46]   --->   Operation 58 'icmp' 'icmp_ln46' <Predicate = (!icmp_ln38)> <Delay = 1.56> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node valueout_last)   --->   "%and_ln46 = and i1 %cmp48, i1 %icmp_ln46" [loop_pipeline.cpp:46]   --->   Operation 59 'and' 'and_ln46' <Predicate = (!icmp_ln38)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (0.97ns) (out node of the LUT)   --->   "%valueout_last = or i1 %and_ln46, i1 %valueout_last_1" [loop_pipeline.cpp:46]   --->   Operation 60 'or' 'valueout_last' <Predicate = (!icmp_ln38)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (1.65ns)   --->   "%add_ln39 = add i3 %select_ln15, i3 1" [loop_pipeline.cpp:39]   --->   Operation 61 'add' 'add_ln39' <Predicate = (!icmp_ln38)> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (1.58ns)   --->   "%store_ln38 = store i3 %select_ln38, i3 %i" [loop_pipeline.cpp:38]   --->   Operation 62 'store' 'store_ln38' <Predicate = (!icmp_ln38)> <Delay = 1.58>
ST_2 : Operation 63 [1/1] (1.58ns)   --->   "%store_ln39 = store i3 %add_ln39, i3 %j" [loop_pipeline.cpp:39]   --->   Operation 63 'store' 'store_ln39' <Predicate = (!icmp_ln38)> <Delay = 1.58>

State 3 <SV = 2> <Delay = 2.32>
ST_3 : Operation 64 [1/2] ( I:2.32ns O:2.32ns )   --->   "%A_load = load i2 %A_addr" [loop_pipeline.cpp:42]   --->   Operation 64 'load' 'A_load' <Predicate = (first_iter_1)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 65 [1/2] ( I:2.32ns O:2.32ns )   --->   "%A_1_load = load i2 %A_1_addr" [loop_pipeline.cpp:38]   --->   Operation 65 'load' 'A_1_load' <Predicate = (first_iter_1)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 66 [1/2] ( I:2.32ns O:2.32ns )   --->   "%A_2_load = load i2 %A_2_addr" [loop_pipeline.cpp:38]   --->   Operation 66 'load' 'A_2_load' <Predicate = (first_iter_1)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 67 [1/2] ( I:2.32ns O:2.32ns )   --->   "%A_3_load = load i2 %A_3_addr" [loop_pipeline.cpp:38]   --->   Operation 67 'load' 'A_3_load' <Predicate = (first_iter_1)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%store_ln42 = store i32 %A_load, i32 %A_load7" [loop_pipeline.cpp:42]   --->   Operation 68 'store' 'store_ln42' <Predicate = (first_iter_1)> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (0.00ns)   --->   "%store_ln38 = store i32 %A_1_load, i32 %A_1_load5" [loop_pipeline.cpp:38]   --->   Operation 69 'store' 'store_ln38' <Predicate = (first_iter_1)> <Delay = 0.00>
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "%store_ln38 = store i32 %A_2_load, i32 %A_2_load3" [loop_pipeline.cpp:38]   --->   Operation 70 'store' 'store_ln38' <Predicate = (first_iter_1)> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%store_ln38 = store i32 %A_3_load, i32 %A_3_load1" [loop_pipeline.cpp:38]   --->   Operation 71 'store' 'store_ln38' <Predicate = (first_iter_1)> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%br_ln39 = br void %VITIS_LOOP_41_3.split" [loop_pipeline.cpp:39]   --->   Operation 72 'br' 'br_ln39' <Predicate = (first_iter_1)> <Delay = 0.00>
ST_3 : Operation 73 [1/2] ( I:2.32ns O:2.32ns )   --->   "%B_load = load i2 %B_addr" [loop_pipeline.cpp:42]   --->   Operation 73 'load' 'B_load' <Predicate = (!icmp_ln38)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 74 [1/2] ( I:2.32ns O:2.32ns )   --->   "%B_1_load = load i2 %B_1_addr" [loop_pipeline.cpp:42]   --->   Operation 74 'load' 'B_1_load' <Predicate = (!icmp_ln38)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 75 [1/2] ( I:2.32ns O:2.32ns )   --->   "%B_2_load = load i2 %B_2_addr" [loop_pipeline.cpp:42]   --->   Operation 75 'load' 'B_2_load' <Predicate = (!icmp_ln38)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 76 [1/2] ( I:2.32ns O:2.32ns )   --->   "%B_3_load = load i2 %B_3_addr" [loop_pipeline.cpp:42]   --->   Operation 76 'load' 'B_3_load' <Predicate = (!icmp_ln38)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>

State 4 <SV = 3> <Delay = 6.91>
ST_4 : Operation 77 [1/1] (0.00ns)   --->   "%A_3_load_1 = load i32 %A_3_load1" [loop_pipeline.cpp:42]   --->   Operation 77 'load' 'A_3_load_1' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_4 : Operation 78 [1/1] (0.00ns)   --->   "%A_2_load_1 = load i32 %A_2_load3" [loop_pipeline.cpp:42]   --->   Operation 78 'load' 'A_2_load_1' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_4 : Operation 79 [1/1] (0.00ns)   --->   "%A_1_load_1 = load i32 %A_1_load5" [loop_pipeline.cpp:42]   --->   Operation 79 'load' 'A_1_load_1' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_4 : Operation 80 [1/1] (0.00ns)   --->   "%A_load_1 = load i32 %A_load7" [loop_pipeline.cpp:42]   --->   Operation 80 'load' 'A_load_1' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_4 : Operation 81 [2/2] (6.91ns)   --->   "%mul_ln42 = mul i32 %B_load, i32 %A_load_1" [loop_pipeline.cpp:42]   --->   Operation 81 'mul' 'mul_ln42' <Predicate = (!icmp_ln38)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 82 [2/2] (6.91ns)   --->   "%mul_ln42_1 = mul i32 %B_2_load, i32 %A_2_load_1" [loop_pipeline.cpp:42]   --->   Operation 82 'mul' 'mul_ln42_1' <Predicate = (!icmp_ln38)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 83 [2/2] (6.91ns)   --->   "%mul_ln42_2 = mul i32 %B_1_load, i32 %A_1_load_1" [loop_pipeline.cpp:42]   --->   Operation 83 'mul' 'mul_ln42_2' <Predicate = (!icmp_ln38)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 84 [2/2] (6.91ns)   --->   "%mul_ln42_3 = mul i32 %B_3_load, i32 %A_3_load_1" [loop_pipeline.cpp:42]   --->   Operation 84 'mul' 'mul_ln42_3' <Predicate = (!icmp_ln38)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 6.91>
ST_5 : Operation 85 [1/2] (6.91ns)   --->   "%mul_ln42 = mul i32 %B_load, i32 %A_load_1" [loop_pipeline.cpp:42]   --->   Operation 85 'mul' 'mul_ln42' <Predicate = (!icmp_ln38)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 86 [1/2] (6.91ns)   --->   "%mul_ln42_1 = mul i32 %B_2_load, i32 %A_2_load_1" [loop_pipeline.cpp:42]   --->   Operation 86 'mul' 'mul_ln42_1' <Predicate = (!icmp_ln38)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 87 [1/2] (6.91ns)   --->   "%mul_ln42_2 = mul i32 %B_1_load, i32 %A_1_load_1" [loop_pipeline.cpp:42]   --->   Operation 87 'mul' 'mul_ln42_2' <Predicate = (!icmp_ln38)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 88 [1/2] (6.91ns)   --->   "%mul_ln42_3 = mul i32 %B_3_load, i32 %A_3_load_1" [loop_pipeline.cpp:42]   --->   Operation 88 'mul' 'mul_ln42_3' <Predicate = (!icmp_ln38)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 95 [1/1] (1.58ns)   --->   "%ret_ln0 = ret"   --->   Operation 95 'ret' 'ret_ln0' <Predicate = (icmp_ln38)> <Delay = 1.58>

State 6 <SV = 5> <Delay = 6.92>
ST_6 : Operation 89 [1/1] (0.00ns)   --->   "%specpipeline_ln15 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [loop_pipeline.cpp:15]   --->   Operation 89 'specpipeline' 'specpipeline_ln15' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_6 : Operation 90 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln42 = add i32 %mul_ln42_2, i32 %mul_ln42" [loop_pipeline.cpp:42]   --->   Operation 90 'add' 'add_ln42' <Predicate = (!icmp_ln38)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 91 [1/1] (2.55ns)   --->   "%add_ln42_1 = add i32 %mul_ln42_1, i32 %mul_ln42_3" [loop_pipeline.cpp:42]   --->   Operation 91 'add' 'add_ln42_1' <Predicate = (!icmp_ln38)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 92 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%result = add i32 %add_ln42_1, i32 %add_ln42" [loop_pipeline.cpp:42]   --->   Operation 92 'add' 'result' <Predicate = (!icmp_ln38)> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 93 [1/1] (0.00ns)   --->   "%write_ln45 = write void @_ssdm_op_Write.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A, i32 %stream_out_V_data_V, i4 %stream_out_V_keep_V, i4 %stream_out_V_strb_V, i1 %stream_out_V_last_V, i32 %result, i4 15, i4 0, i1 %valueout_last_1" [loop_pipeline.cpp:45]   --->   Operation 93 'write' 'write_ln45' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_6 : Operation 94 [1/1] (0.00ns)   --->   "%br_ln39 = br void %VITIS_LOOP_41_3" [loop_pipeline.cpp:39]   --->   Operation 94 'br' 'br_ln39' <Predicate = (!icmp_ln38)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 4.956ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln0') of constant 0 on local variable 'indvar_flatten14' [22]  (1.588 ns)
	'load' operation 5 bit ('indvar_flatten14_load', loop_pipeline.cpp:38) on local variable 'indvar_flatten14' [28]  (0.000 ns)
	'add' operation 5 bit ('add_ln38', loop_pipeline.cpp:38) [30]  (1.780 ns)
	'store' operation 0 bit ('store_ln38', loop_pipeline.cpp:38) of variable 'add_ln38', loop_pipeline.cpp:38 on local variable 'indvar_flatten14' [87]  (1.588 ns)

 <State 2>: 5.868ns
The critical path consists of the following:
	'load' operation 3 bit ('j_load', loop_pipeline.cpp:39) on local variable 'j', loop_pipeline.cpp:39 [33]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln39', loop_pipeline.cpp:39) [37]  (1.650 ns)
	'select' operation 3 bit ('select_ln15', loop_pipeline.cpp:15) [38]  (0.980 ns)
	'add' operation 3 bit ('add_ln39', loop_pipeline.cpp:39) [86]  (1.650 ns)
	'store' operation 0 bit ('store_ln39', loop_pipeline.cpp:39) of variable 'add_ln39', loop_pipeline.cpp:39 on local variable 'j', loop_pipeline.cpp:39 [89]  (1.588 ns)

 <State 3>: 2.322ns
The critical path consists of the following:
	'load' operation 32 bit ('A_load', loop_pipeline.cpp:42) on array 'A' [49]  (2.322 ns)

 <State 4>: 6.912ns
The critical path consists of the following:
	'load' operation 32 bit ('A_load_1', loop_pipeline.cpp:42) on local variable 'A_load7' [62]  (0.000 ns)
	'mul' operation 32 bit ('mul_ln42', loop_pipeline.cpp:42) [74]  (6.912 ns)

 <State 5>: 6.912ns
The critical path consists of the following:
	'mul' operation 32 bit ('mul_ln42', loop_pipeline.cpp:42) [74]  (6.912 ns)

 <State 6>: 6.923ns
The critical path consists of the following:
	'add' operation 32 bit ('add_ln42_1', loop_pipeline.cpp:42) [79]  (2.552 ns)
	'add' operation 32 bit ('result', loop_pipeline.cpp:42) [80]  (4.371 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
